~~
~~ Copyright (C) 2009 FastConnect
~~ 
~~ Cargo OpenSpaces Container is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU Lesser General Public License as published by
~~ the Free Software Foundation, either version 3 of the License, or
~~ (at your option) any later version.
~~ 
~~ Cargo OpenSpaces Container is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~ GNU General Public License for more details.
~~ 
~~ You should have received a copy of the GNU Lesser General Public License
~~ along with this program.  If not, see <http://www.gnu.org/licenses/lgpl.txt>.
~~

Configuration

* Processing Unit deployable

 Cargo deployable metaphor is implemented as fr.fastconnect.maven.cargo.container.openspaces.ProcessingUnitDeployable. This implementation is used for all processing unit containers.
 Deployable can be used with following project packaging types:
 
    * jar: target/classes folder will be used as processing unit folder
    
    * pu: generated pu will be used as processing unit folder
    
 Location value can be provided to give the full path of a pu structure.

* Standalone Processing Unit Container 6x

 This plugin provides 2 different implementation of Cargo container based on {{{standalone processing unit container}http://www.gigaspaces.com/wiki/display/OLH/Open+Spaces+Standalone+Processing+Unit+Container}}. 
 This container implementation supports a single deployable and no deployer implementation can be used.
 
** Embedded Container

 Allows to start a container using classpath from provided dependencies.
 When using this container you will need to provide:
    
    * an openspaces dependency definition  
 
    * a valid license
 
 This container is implemented by fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xEmbeddedLocalContainer class and must be used with associated:
    
    * local configuration (fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xLocalConfiguration)
 
    * deployable type (fr.fastconnect.maven.cargo.container.openspaces.ProcessingUnitDeployable)

+--
...
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>0.3</version>
        <dependencies>
          <dependency>
            <groupId>fr.fastconnect.openspaces</groupId>
            <artifactId>cargo-container-openspaces</artifactId>
            <version>1.0</version>
          </dependency>
          <dependency>
            <groupId>com.gigaspaces</groupId>
            <artifactId>openspaces</artifactId>
            <version>6.0-build-2040</version>
            <classifier>jdk15</classifier>
          </dependency>
        </dependencies>
        <configuration>
          <wait>false</wait>
          <container>
            <containerId>standalone6x</containerId>
            <implementation>fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xEmbeddedLocalContainer</implementation>
            <systemProperties>
              <com.gs.licensekey>...</com.gs.licensekey>
              <com.gs.jini_lus.groups>essai</com.gs.jini_lus.groups>
              <com.gs.jini_lus.locators>localhost</com.gs.jini_lus.locators>
            </systemProperties>
            <output>c:/standalone-puc.log</output>
            <log>c:/cargo.log</log>
          </container>
          <configuration>
            <implementation>fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xLocalConfiguration</implementation>
            <deployables>
              <deployable>
                <implementation>fr.fastconnect.maven.cargo.container.openspaces.ProcessingUnitDeployable</implementation>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <properties>
                  <cluster></cluster>
                  <properties></properties>
                </properties>
              </deployable>
            </deployables>
          </configuration>
        </configuration>
      </plugin>
    </plugins>
  </build>
  ...
+--

** Installed Container

 Allows to start a container using a local GigaSpaces installation.
 When using this container you will need to provide:
 
    * a valid GigaSpaces home location
 
 This container is implemented by fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xInstalledLocalContainer class and must be used with associated:
 
    * local configuration (fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xLocalConfiguration)
 
    * deployable type (fr.fastconnect.maven.cargo.container.openspaces.ProcessingUnitDeployable)

+--
...
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>0.3</version>
        <dependencies>
          <dependency>
            <groupId>fr.fastconnect.openspaces</groupId>
            <artifactId>cargo-container-openspaces</artifactId>
            <version>1.0</version>
          </dependency>
        </dependencies>
        <configuration>
          <wait>false</wait>
          <container>
            <containerId>standalone6x</containerId>
            <implementation>fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xEmbeddedLocalContainer</implementation>
            <home>C:\GigaSpacesTraining\GigaSpaces</home>
            <systemProperties>
              <com.gs.jini_lus.groups>essai</com.gs.jini_lus.groups>
              <com.gs.jini_lus.locators>localhost</com.gs.jini_lus.locators>
            </systemProperties>
            <output>c:/standalone-puc.log</output>
            <log>c:/cargo.log</log>
          </container>
          <configuration>
            <implementation>fr.fastconnect.maven.cargo.container.openspaces.standalone.Standalone6xLocalConfiguration</implementation>
            <deployables>
              <deployable>
                <implementation>fr.fastconnect.maven.cargo.container.openspaces.ProcessingUnitDeployable</implementation>
                <groupId>${project.groupId}</groupId>
                <artifactId>${project.artifactId}</artifactId>
                <properties>
                  <cluster></cluster>
                  <properties></properties>
                </properties>
              </deployable>
            </deployables>
          </configuration>
        </configuration>
      </plugin>
    </plugins>
  </build>
...
+--

** Lifecycle binding

 Cargo can be configured to be automatically started/stopped during the integration-test maven lifecycle through the binding concept. 
 Using following configuration associated maven container will be started before the integration phase and stopped after.
 
+--
...
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        ...
        <executions>
          <execution>
            <id>start-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
...
+--

 Maven integration-test phase can be launched using following command:
 
+--
mvn integration-test
+-- 